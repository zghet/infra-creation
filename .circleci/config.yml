version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project

commands:
  #Excercse - Rollback
  destroy_environment:
    steps:
    - run:
        name: Destroy environment
        when: on_fail
        command: |
          aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}


jobs:

# Exercise: Create infrastructure
  create_infrastructure:  # Choose any name, such as `build`
      # The primary container, where your job's commands will run
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout # check out the code in the project directory
        - run: #echo "hello world"  run the `echo` command
            name: Create Cloudformation Stack
            command:
              aws cloudformation deploy --template-file create-server.yml --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} --region us-west-1
        - run:  return 1
        - destroy_environment

# Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11 
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["3c:a1:6d:e4:5e:f8:36:36:df:ff:bf:46:d5:d4:76:56"] 
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory install-ansible.yml

# Exercise: Excute smoke test
  smoke_test:
    docker:
      - image: alpine:latest 
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
             URL="https://blog.udacity3.c3om/"
             # Test if website exists
             if curl -s --head ${URL} 
             then
               return 0
             else
               return 1
             fi
      - destroy_environment

# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      #- smoke_test